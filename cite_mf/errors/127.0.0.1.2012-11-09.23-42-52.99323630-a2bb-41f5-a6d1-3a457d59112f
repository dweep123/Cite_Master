(dp1
S'output'
p2
S'missing "pass" in view'
p3
sS'layer'
p4
S'ParserContainer'
p5
sS'code'
p6
S'response.write(\'<html xmlns="http://www.w3.org/1999/xhtml">\\n <head>\\n  <title>\\n   CITE MASTER\\n  </title>\\n  \', escape=False)\nresponse.files.append(URL(request.application,\'static\',\'plugin_layouts/layouts/Blend/default.css\'))\nresponse.write(\'\\n  \', escape=False)\nresponse.files.append(URL(\'static\',\'plugin_layouts/superfish.js\'))\nresponse.write(\'\\n  \', escape=False)\nresponse.write(\'<script type="text/javascript"><!--\\n    // These variables are used by the web2py_ajax_init function in web2py_ajax.js (which is loaded below).\\n    var w2p_ajax_confirm_message = "\', escape=False)\nresponse.write(T(\'Are you sure you want to delete this object?\'))\nresponse.write(\'";\\n    var w2p_ajax_date_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d\'))\nresponse.write(\'";\\n    var w2p_ajax_datetime_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d %H:%M:%S\'))\nresponse.write(\'";\\n    //--></script>\\n\', escape=False)\nresponse.files.insert(0,URL(\'static\',\'js/jquery.js\'))\nresponse.files.insert(1,URL(\'static\',\'css/calendar.css\'))\nresponse.files.insert(2,URL(\'static\',\'js/calendar.js\'))\nresponse.files.insert(3,URL(\'static\',\'js/web2py.js\'))\nresponse.include_meta()\nresponse.include_files()\nresponse.write(\'\\n\', escape=False)\nresponse.write(\'\\n  <style>\\nul.web2py-menu-vertical { width: 100px; position: relative; top:1em; left:1em;  z-index:30; border:0; margin:0; padding: 0; list-style: none; text-decoration: none;}\\nul.web2py-menu-vertical li { margin:0; padding:0; border:0; width: 150px; background: black; text-align:left;}\\nul.web2py-menu-vertical li a { margin:0; padding: 1px 3px 1px 3px; border:0; width: 194px; color: white; font-size:12px;}\\ndiv.flash { position: fixed; float: right; padding: 10px; top: 10px; right: 10px; opacity: 0.75; margin: 10px 10px 10px 10px; text-align: center; clear: both; color: #fff; font-size: 11pt; text-align: center; vertical-align: middle; cursor: pointer; background: black; border: 2px solid #fff; -moz-border-radius: 5px; -webkit-border-radius: 5px; z-index: 2; }\\ndiv.error { background-color: red; color: white; padding: 3px; }\\n.auth_navbar { text-align:right; z-index:20; position: absolute; top: 2px; right:30px; border:0; padding:0 }\\n  </style>\\n </head>\\n <body>\\n  <!-- start header -->\\n  \', escape=False)\ntry:\n    response.write(auth.navbar(action=URL(\'default\',\'user\')))\nexcept:pass\nresponse.write(\'\\n\\n  <!-- start header -->\\n  <div id="header">\\n   <div id="logo">\\n    <h1>\\n    <span style="text-transform: uppercase">CITE MASTER</span>\\n    </h1>\\n    \\n   </div>\\n   <div id="menu">\\n    \', escape=False)\nresponse.write(MENU(response.menu,_class=\'web2py-menu\'))\nresponse.write(\'\\n    <script>\\n      jQuery(document).ready(function(){jQuery(\\\'ul.web2py-menu\\\').superfish({delay:400});});\\n    </script>\\n   </div>\\n  </div>\\n  <!-- end header -->\\n  <div id="wrapper">\\n   <!-- start page -->\\n   <div id="page">\\n    <!-- start content -->\\n    <div>\\n     <div id="flash">\', escape=False)\nresponse.write(response.flash or \'\')\nresponse.write(\'</div>\\n     \', escape=False)\nresponse.write(\'\\n<ul type="none">\\n\', escape=False)\ncount=0\nresponse.write(\'\\n\', escape=False)\nf=open(\'Rough\',\'w\')\nresponse.write(\'\\n\', escape=False)\ndef print1(bigans):\n    response.write(\'\\n    \', escape=False)\n    global count\n    response.write(\'\\n    \', escape=False)\n    for x in range(0,len(bigans)):\n        response.write(\'\\n        \', escape=False)\n        if type(bigans[x]) is list:\n            response.write(\'\\n            \', escape=False)\n            if count==0:\n                response.write(\'\\n                \', escape=False)\n                count=count+1\n                response.write(\'\\n                \', escape=False)\n                print1(bigans[x])\n                response.write(\'\\n            \', escape=False)\n            elif count!=0 and x!=7:\n                response.write(\'\\n                \', escape=False)\n                count=count+1\n                response.write(\'\\n                \', escape=False)\n                print1(bigans[x])\n                response.write(\'\\n            \', escape=False)\n                pass\n            response.write(\'\\n         \', escape=False)\n        else:\n            response.write(\'\\n             \', escape=False)\n            if x==2:\n                response.write(\'\\n             \', escape=False)\n                response.write(A(\'---------------\'*(count-1)+bigans[0], _href=bigans[2]))\n                response.write(\'\\n             \', escape=False)\n                f.write(\'---------------\'*(count-1)+bigans[0]+\'\\n\')\n                response.write(\'\\n             \', escape=False)\n            elif x==3 and bigans[x]!=-1:\n                response.write(\'\\n                  \', escape=False)\n                response.write(LI(\'---------------\'*(count-1)+\'Authors-\'))\n                response.write(\'\\n                  \', escape=False)\n                f.write(\'---------------\'*(count-1)+\'Authors-\'+\'\\n\')\n                response.write(\'\\n                 \', escape=False)\n                l=bigans[x].split(\';\')\n                response.write(\'\\n                 \', escape=False)\n                for p in l:\n                    response.write(\'\\n                     \', escape=False)\n                    if \',\' in p:\n                        response.write(\'\\n                         \', escape=False)\n                        k=p.split(\',\')[1]+\' \'+p.split(\',\')[0]\n                        response.write(\'\\n                     \', escape=False)\n                    else:\n                        response.write(\'\\n                         \', escape=False)\n                        k=p\n                        response.write(\'\\n                     \', escape=False)\n                        pass\n                    response.write(\'\\n                      \', escape=False)\n                    response.write(LI(\'---------------\'*(count-1)+k))\n                    response.write(\'\\n                      \', escape=False)\n                    f.write(\'---------------\'*(count-1)+k+\'\\n\')\n                    response.write(\'\\n                 \', escape=False)\n                    pass\n                response.write(\'\\n             \', escape=False)\n            elif x==6 and bigans[x]!=-1:\n                response.write(\'\\n                \', escape=False)\n                response.write(LI(\'---------------\'*(count-1)+\'Cited by:\'+str(bigans[x])))\n                response.write(\'\\n                \', escape=False)\n                f.write(\'---------------\'*(count-1)+\'Cited by:\'+str(bigans[x])+\'\\n\')\n                response.write(\'\\n             \', escape=False)\n            elif x==4 and bigans[x]!=-1:\n                response.write(\'\\n                \', escape=False)\n                response.write(LI(\'---------------\'*(count-1)+\'Date:\'+bigans[x]))\n                response.write(\'\\n                \', escape=False)\n                f.write(\'---------------\'*(count-1)+\'Date:\'+bigans[x]+\'\\n\')\n                response.write(\'\\n             \', escape=False)\n            elif x==5 and bigans[x]!=-1:\n                response.write(\'\\n                \', escape=False)\n                response.write(A(\'---------------\'*(count-1)+\'Abstract:\',_href=URL("abstract", args=[bigans[1]])))\n                response.write(\'\\n                \', escape=False)\n                f.write(\'---------------\'*(count-1)+\'Abstract:\'+bigans[x]+\'\\n\')\n                response.write(\'\\n             \', escape=False)\n                pass\n            response.write(\'\\n         \', escape=False)\n            pass\n        response.write(\'\\n     \', escape=False)\n        pass\n    response.write(\'\\n     \', escape=False)\n    count=count-1\n    response.write(\'\\n     \', escape=False)\n    return\nresponse.write(\'\\n<div style="text-align:right">\\n\', escape=False)\nresponse.write(LI(\'Sort by: \'))\nresponse.write(\'\\n\', escape=False)\nresponse.write(LI(A(\'Relevence \',_href=URL("sorting", args=ret1[0]))))\nresponse.write(\'\\n\', escape=False)\nresponse.write(LI(A(\'Publication date \',_href=URL("sorting", args=ret1[1]))))\nresponse.write(\'\\n</div>\\n\', escape=False)\npass\nresponse.write(\'\\n\', escape=False)\nprint1(bigans)\nresponse.write(\'\\n\', escape=False)\nf.close()\nresponse.write(\'\\n\', escape=False)\nfrom reportlab.pdfgen import canvas\nimport os\nfrom reportlab.lib.units import inch, cm\nfrom reportlab.lib.pagesizes import A4\ntop_margin = A4[1] - inch\nbottom_margin = inch\nleft_margin = inch\nright_margin = A4[0] - inch\ndef run():\n    canv = canvas.Canvas(\'rough.pdf\')\n    canv.setFont(\'Times-Roman\', 12)\n    tx = canv.beginText(left_margin, top_margin - 0.5*inch)\n    fn="Rough"\n    data = open(fn,\'r\').readlines()\n    for line in data:\n        tx.textLine(line)\n        y = tx.getY()\n        if y < bottom_margin + 0.5*inch:\n            canv.drawText(tx)\n            canv.showPage()\n            canv.setFont(\'Times-Roman\', 12)\n            tx = canv.beginText(left_margin, top_margin - 0.5*inch)\n            pg = canv.getPageNumber()\n            if tx:\n                canv.drawText(tx)\n                canv.showPage()\n                canv.save()\n                response.write(\'\\n\', escape=False)\n                run()\n                response.write(\'\\n\', escape=False)\n                from gluon.tools import Mail\n                mail = Mail()\n                mail.settings.server = \'smtp.gmail.com:25\'\n                mail.settings.sender = \'papireddygarimaneesha88@gmail.com\'\n                mail.settings.login = \'papireddygarimaneesha88:peddamallu\'\n                response.write(\'\\n\', escape=False)\n                mail.send(to=[\'papireddygarimaneesha88@gmail.com\'],\n                subject=\'hi\',\n                message=\'hi manu\',\n                attachments = [Mail.Attachment(\'rough.pdf\')])\n                response.write(\'\\n</ul>\\n\', escape=False)\n                response.write(\'\\n    </div>\\n    <!-- end content -->\\n    <div style="clear: both;">\\n     &nbsp;\\n    </div>\\n   </div>\\n   <!-- end page -->\\n  </div>\\n  <div id="footer">\\n   <p>\\n    &copy;2012 All Rights Reserved. &nbsp;&bull;&nbsp; Design by P.Maneesha,Chitra Khatwani,Rajat Bharadwaj\\n   </p>\\n  </div>\\n </body>\\n</html>\\n\', escape=False)'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'gluon.rocket'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of SocketTimeout object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of SocketTimeout object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of SocketTimeout object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of SocketTimeout object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of SocketTimeout object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of SocketTimeout object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of SocketTimeout object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of SocketTimeout object>'
p35
sS'__class__'
p36
S"<class 'gluon.rocket.SocketTimeout'>"
p37
sS'__doc__'
p38
S"'Exception for when a socket times out between requests.'"
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of SocketTimeout object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of SocketTimeout object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of SocketTimeout object>"
p45
sS'args'
p46
S"('Socket timed out before request.',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of SocketTimeout object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of SocketTimeout object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of SocketTimeout object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of SocketTimeout object>"
p57
ssS'evalue'
p58
S'Socket timed out before request.'
p59
sS'frames'
p60
(lp61
(dp62
S'file'
p63
S'/home/maneesha/Downloads/web2py/gluon/rocket.py'
p64
sS'dump'
p65
(dp66
S'self'
p67
S'<WSGIWorker(Thread-12, started daemon 140377281509120)>'
p68
sS'conn'
p69
S'<gluon.rocket.Connection object>'
p70
sS'self.run_app'
p71
S'<bound method WSGIWorker.run_app of <WSGIWorker(Thread-12, started daemon 140377281509120)>>'
p72
ssS'lnum'
p73
I1302
sS'lines'
p74
(dp75
I1297
S'            # Enter connection serve loop'
p76
sI1298
S'            while True:'
p77
sI1299
S'                if __debug__:'
p78
sI1300
S"                    self.err_log.debug('Serving a request')"
p79
sI1301
S'                try:'
p80
sI1302
S'                    self.run_app(conn)'
p81
sI1303
S'                    log_info = dict(client_ip = conn.client_addr,'
p82
sI1304
S"                                    time = datetime.now().strftime('%c'),"
p83
sI1305
S"                                    status = self.status.split(' ')[0],"
p84
sI1306
S'                                    size = self.size,'
p85
ssS'call'
p86
S'(self=<WSGIWorker(Thread-12, started daemon 140377281509120)>)'
p87
sS'func'
p88
S'run'
p89
sa(dp90
g63
S'/home/maneesha/Downloads/web2py/gluon/rocket.py'
p91
sg65
(dp92
S'self'
p93
S'<WSGIWorker(Thread-12, started daemon 140377281509120)>'
p94
sS'self.environ'
p95
S"{'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'HTTP_ACCEPT_ENCODING': 'gzip, deflate', 'HTTP_ACCEPT_LANGUAGE': 'en-US,en;q=0.5', 'HTTP_CONNECTION': 'keep-alive', 'HTTP_COOKIE': 'session_id_welcome=127.0.0.1-2cb6985d-c24b-412c-..._m=127.0.0.1-bdb61304-d99f-4483-92ca-913509a6b682', 'HTTP_HOST': '127.0.0.1:8000', 'HTTP_USER_AGENT': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0', 'PATH_INFO': '/cite_m2/default/final_ans', 'QUERY_STRING': '', 'REMOTE_ADDR': '127.0.0.1', ...}"
p96
sS'sock_file'
p97
S'<socket._fileobject object>'
p98
sS'environ'
p99
S'undefined'
p100
sS'self.build_environ'
p101
S'<bound method WSGIWorker.build_environ of <WSGIWorker(Thread-12, started daemon 140377281509120)>>'
p102
sS'conn'
p103
S'<gluon.rocket.Connection object>'
p104
ssg73
I1986
sg74
(dp105
I1984
S'        try:'
p106
sI1985
S'            # Read the headers and build our WSGI environment'
p107
sI1986
S'            self.environ = environ = self.build_environ(sock_file, conn)'
p108
sI1987
S''
sI1988
S'            # Handle 100 Continue'
p109
sI1989
S"            if environ.get('HTTP_EXPECT', '') == '100-continue':"
p110
sI1990
S"                res = environ['SERVER_PROTOCOL'] + ' 100 Continue\\r\\n\\r\\n'"
p111
sI1981
S'        else:'
p112
sI1982
S'            sock_file = conn.makefile(BUF_SIZE)'
p113
sI1983
S''
ssg86
S'(self=<WSGIWorker(Thread-12, started daemon 140377281509120)>, conn=<gluon.rocket.Connection object>)'
p114
sg88
S'run_app'
p115
sa(dp116
g63
S'/home/maneesha/Downloads/web2py/gluon/rocket.py'
p117
sg65
(dp118
S'sock_file'
p119
S'<socket._fileobject object>'
p120
sS'self.read_request_line'
p121
S'<bound method WSGIWorker.read_request_line of <W...rker(Thread-12, started daemon 140377281509120)>>'
p122
sS'self'
p123
S'<WSGIWorker(Thread-12, started daemon 140377281509120)>'
p124
sS'request'
p125
g100
ssg73
I1807
sg74
(dp126
I1802
S'                                      "wsgiorg.futures": executor.futures})'
p127
sI1803
S''
sI1804
S'    def build_environ(self, sock_file, conn):'
p128
sI1805
S'        """ Build the execution environment. """'
p129
sI1806
S'        # Grab the request line'
p130
sI1807
S'        request = self.read_request_line(sock_file)'
p131
sI1808
S''
sI1809
S'        # Copy the Base Environment'
p132
sI1810
S'        environ = self.base_environ.copy()'
p133
sI1811
S''
ssg86
S'(self=<WSGIWorker(Thread-12, started daemon 140377281509120)>, sock_file=<socket._fileobject object>, conn=<gluon.rocket.Connection object>)'
p134
sg88
S'build_environ'
p135
sa(dp136
g63
S'/home/maneesha/Downloads/web2py/gluon/rocket.py'
p137
sg65
(dp138
S'global SocketTimeout'
p139
S"<class 'gluon.rocket.SocketTimeout'>"
p140
ssg73
I1376
sg74
(dp141
I1376
S'            raise SocketTimeout("Socket timed out before request.")'
p142
sI1377
S''
sI1378
S'        d = d.strip()'
p143
sI1379
S''
sI1380
S'        if not d:'
p144
sI1371
S''
sI1372
S'                d = sock_file.readline()'
p145
sI1373
S'                if PY3K:'
p146
sI1374
S"                    d = d.decode('ISO-8859-1')"
p147
sI1375
S'        except socket.timeout:'
p148
ssg86
S'(self=<WSGIWorker(Thread-12, started daemon 140377281509120)>, sock_file=<socket._fileobject object>)'
p149
sg88
S'read_request_line'
p150
sasS'pyver'
p151
S'Python 2.7.3: /usr/bin/python'
p152
sS'etype'
p153
S"<class 'gluon.rocket.SocketTimeout'>"
p154
sS'date'
p155
S'Fri Nov  9 23:43:21 2012'
p156
sS'locals'
p157
(dp158
S'sock_file'
p159
S'<socket._fileobject object>'
p160
sS'self'
p161
S'<WSGIWorker(Thread-12, started daemon 140377281509120)>'
p162
sssS'traceback'
p163
S'Traceback (most recent call last):\n  File "/home/maneesha/Downloads/web2py/gluon/rocket.py", line 1302, in run\n    self.run_app(conn)\n  File "/home/maneesha/Downloads/web2py/gluon/rocket.py", line 1986, in run_app\n    self.environ = environ = self.build_environ(sock_file, conn)\n  File "/home/maneesha/Downloads/web2py/gluon/rocket.py", line 1807, in build_environ\n    request = self.read_request_line(sock_file)\n  File "/home/maneesha/Downloads/web2py/gluon/rocket.py", line 1376, in read_request_line\n    raise SocketTimeout("Socket timed out before request.")\nSocketTimeout: Socket timed out before request.\n'
p164
s.